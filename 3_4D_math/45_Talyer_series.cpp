/*
    멱급수가 수렴하기 위한 조건을 알았으니 무한 미분 가능한 함수를
    멱급수 형태로 바꾸는 방법을 알아야 된다.

    이런 멱급수를 매클로린 급수(Maclaurin series) 혹은 테일러 급수(Tayler series)라고 한다.
    이 매클로린 급수는 컴퓨터에서 복잡한 함수의 근사값ㅇ르 구할 때 유요하게 사용된다.
    매클로린 급수는 무한 개의 원소를 가지고 있어 허용 가능한 오차 내의 정밀한 값을
    빠르게 계산할 수 있다.

    수렴하는 멱급수에서 공비값을 x로 바꿔 멱급수를 함수 f(x)로 정의한다.

    f(x) = a1 + a2x + a3x^2 ....

    이 멱급수에 대응되는 어떤 함수가 무한 미분이 가능하다면 멱급수의 도함수는
    거듭제곱 함수의 미분을 사용해 전개될 것이다.

    f'(x) = n * x^(n-1), 거듭제곱의 도함수

    멱급수의 도함수

    f'(x) = 1 * a2 + 2a3 * x + 3a4 * x^2 ...
    f''(x)= (2 * 1)a3 + (3 * 2)a4x ...

    원함수 f(x)를 n차 미분한 모든 도함수의 x값에 0을 대입하면 멱급수를 구성하는
    각항의 계수값 an값과 일정한 규칙을 가지는 상수만 남는다.

    f(0) = a1
    f'(0) = 1*a2
    f''(0) = (2*1)a3 ..

    어떤 자연수보다 작은 모든 자연수의 곱을 계승(Factorial)이라 하고 ! 기호를 사용해 표현한다.

    n! = (n - 1)! * n
    (n-1)! = n! / n
    0! = 1

    원함수에 0을 대입한 도함수도 factorial을 사용해 표기할 수 있따.

    f(0) = 0!a1
    f'(0) = 1!a2
    f''(0) = 2!a3
    fn(0) = n!a(n+1)

    각 도함수를 보면 멱급수의 n번째 계수 an은 f(x)를 n번 미분한 도함수에 0을
    대입한 값을 n factorial 값으로 나눠주면 얻을 수 있다.

    an = f^(n)(0) / n!

    멱급수 전개는 n번 미분한 도함수에 0을 대입한 형태로 일반화할 수 있다.
    이것을 매크롤린 급수 또는 테일러 급수(Tayler Series)라 한다.
    이건 무한급수이므로 무한 미분 가능한 함수만이 이 수식을 만족할 것이다.

    f(x) = f(0) / 0! + (f'(0) / 1!)x + (f''(0) / 2!)x2 ...


    오일러 공식을 유도하는 데 필요한 자연지수함수, sin, cos 함수를 매클로린 급수 형식으로 전개하고
    이들이 수렴하는지 확인한다.

    f(x) = e^x, 자연지수함수
    f(x) = f(0) / 0! + (f'(0) / 1!)x + (f''(0) / 2!)x2 ...
         = 1 + x + 1/2! x^2 + 1/3! x^3 + 1/4! x^4 ...
         = ∞ ∑ n=0 x^n / n!, 자연지수함수 매클로린 급수 전개

    L = lim n->∞ |(x^+1 / (n + 1)!) / (x^n / n!)|, 매클로린 급수 수령 여부 판정을 위한 비판정법
      = |x| * 0
      = 0

    비판정 결과 0이 나와 해당 급수는 언제나 수렴한다.

    자연지수함수의 매클로린 급수
    e^x = ∞ ∑ n=0 x^n / n!

    sin 함수
    f(x) = sin x

    sin 함수의 매클로린 급수
    f(x) = 0 + x - 0 - 1/3! x^3 + 0 + 1/5!x^5 - 0 - 1/7!x^7 ...
         = ∞ ∑ n=0 ((-1)^n * x^(2n+1)) / (2n + 1)!

    cos 함수
    f(x) = cos x

    cos 함수의 매클로린 급수
    f(x) = 1 - 0 - 1/2! x^2 + 0 + 1/4!x^4 - 0 - 1/6!x^6
         = ∞ ∑ n=0 ((-1)^n * x^2n) / (2n)!

    매클로린 급수는 무한한 항을 가지고 계산하기에 충분하다면
    오차가 무의미한 수준까지 값을 얻을 수 있다.
    각 급수항에 fatorial로 나눈 상수를 미리 계산해두면, 급수는 덧셈과 곱셈으로만 구성된다.
    그러면 컴퓨터로 매우 빠르게 계산이 가능하다.
*/