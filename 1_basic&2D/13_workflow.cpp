/*
    게임 엔진은 씬과리소스를 관리하는 기반을 제공하며 콘텐츠가
    효율적으로 구동되기 위해 실행 과정에 대해서도 고도화된 표준 틀도 함께 제시해준다.

    이 실행의 흘므을 Workflow라고 하며 게임 엔진의 워크플로우는
    씬을 완성하는 과정과 완성된 씬으로부터 화면을 그려내는 과정, 두 가지로 구성된다.

    (ex: Update2D 함수 - 씬 구성, Render2D 함수 - 화면 렌더링)

    기본적인 워크플로우
    
    리소스 로딩 -> 씬 구축 -> 게임 로직 -> 렌더링 로직 -> 게임 로직, 렌더링 로직 반복

    1. 리소스 로딩 : 
        게임에서 사용하는 리소스를 불러들이는 과정
        화면을 구성하는 메시, 텍스처 등은 데이터 양이 크기 때문에
        게임 시작전 미리 불러 메모리에 올려둬야 안정적인 게임 진행이 가능하다.
        게임 시작 전 한 번만 실행된다. (ex: LoadResources 함수 등)

    2. 씬 구축 :
        게임 콘테츠가 구성하는 씬을 설계하는 과정
        씬에 속한 게임 오브젝트가 생성되고, 트랜스폼 정보가 설정되며
        1단계에서 생성된 리소스 정보가 오브젝트에 연결된다
        (ex: LoadScene2D 함수 등)

    3. 게임 로직 :
        프레임마다 게임 오브젝트에 포함되어 있는 트랜스폼 값을 변경하는 과정.
        (ex: Update2D 함수 등)

    4. 렌더링 로직 :
        3단계에서 완성된 씬 정보를 바탕으로 최종 화면을 만들어내는 과정
        오브젝트에 설정된 트랜스폼 정보를 중심으로 오브젝트에 연결된 메시와
        텍스처의 리소스 데이터를 활용해 최종 화면을 그린다.
        (ex: Render2D 함수 등)
*/